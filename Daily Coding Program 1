/* This problem was asked by Google.

Given an array of integers and a number k, where 1 <= k <= length of the array, compute the maximum values of each subarray of length k.

For example, given array = [10, 5, 2, 7, 8, 7] and k = 3, we should get: [10, 7, 8, 8], since:

10 = max(10, 5, 2)
7 = max(5, 2, 7)
8 = max(2, 7, 8)
8 = max(7, 8, 7) */
import java.util.Scanner;
public class google_prasandh{
	public static void main(String[] args) {
	int sum,count=0,b=0;
	Scanner s=new Scanner(System.in);
	int n=s.nextInt();
	
	int[] a=new int[n];
	System.out.print("Enter the elemnts : ");
	for(int i=0;i<n;i++) {
	a[i]=s.nextInt();
	}
	int k=s.nextInt();
	int max=0;
	for(int i=b;i<k;i++) {
		if(max<a[i])
			max=a[i];
			if(i==k-1) {
				b++;
				k++;
				i=0;
				System.out.print(max+" ");
				max=0;
			}
		if(k>n) {
					break;
		}
		
	}
	System.out.println("");
	}
}
